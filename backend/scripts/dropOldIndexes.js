const mongoose = require('mongoose');
const Repair = require('../models/Repair');
require('dotenv').config();

async function dropOldIndexes() {
  try {
    // Conectar a MongoDB
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('‚úÖ Conectado a MongoDB');

    // Obtener todos los √≠ndices actuales
    const indexes = await Repair.collection.getIndexes();
    console.log('\nüìã √çndices actuales:');
    console.log(JSON.stringify(indexes, null, 2));

    // Intentar eliminar el √≠ndice problem√°tico si existe
    try {
      await Repair.collection.dropIndex('idRepair_1');
      console.log('\n‚úÖ √çndice "idRepair_1" eliminado correctamente');
    } catch (error) {
      if (error.code === 27) {
        console.log('\n‚ö†Ô∏è  El √≠ndice "idRepair_1" no existe (esto es normal)');
      } else {
        throw error;
      }
    }

    // Sincronizar √≠ndices del modelo
    await Repair.syncIndexes();
    console.log('‚úÖ √çndices sincronizados con el modelo');

    // Mostrar √≠ndices finales
    const finalIndexes = await Repair.collection.getIndexes();
    console.log('\nüìã √çndices finales:');
    console.log(JSON.stringify(finalIndexes, null, 2));

  } catch (error) {
    console.error('‚ùå Error:', error.message);
  } finally {
    await mongoose.connection.close();
    console.log('\nüîå Conexi√≥n cerrada');
  }
}

dropOldIndexes();
